package com.NBdiMAN.tx;

import java.util.Arrays;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.ProceedingJoinPoint;

public class TransactionManager {
	public void begin(JoinPoint jp) {
		System.out.println("代理对象：" + jp.getThis().getClass());
		System.out.println("目标对象：" + jp.getTarget().getClass());
		System.out.println("被增强方法的参数：" + Arrays.toString(jp.getArgs()));
		System.out.println("连接点方法的签名：" + jp.getSignature());
		System.out.println("当前连接点的类型：" + jp.getKind());
		System.out.println("开始事务");
	}
	
	public void commit(JoinPoint jp) {
		System.out.println("提交事务");
	}
	
	public void rollback(JoinPoint jp, Throwable ex) {
		System.out.println("回滚事务，异常信息：" + ex.getMessage());
	}
	
	public void close(JoinPoint jp) {
		System.out.println("释放资源");
	}
	
	public Object aroundMethod(ProceedingJoinPoint pjp) {
		Object ret = null;
		System.out.println("开始事务");
		try {
			
			System.out.println("提交事务");
		}catch(Exception e) {
			
		}finally {
			
		}
		return ret; 
	}
}
